name: Tests

on:
  push:
    branches: [ master, '**' ]
    tags:
      - "v0.[0-9]+.[0-9]+"
      - "v0.[0-9]+.[0-9]+.dev*"
  pull_request:
    branches: [ master ]

jobs:
  test-sanity:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libsnappy-dev libzstd-dev libkrb5-dev
    - name: Get pip cache dir
      id: pip-cache
      run: |
        python -m pip install -U "pip>=20.1"
        echo "::set-output name=dir::$(pip cache dir)"
    - name: Cache packages
      uses: actions/cache@v1
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-py-3.9-${{ hashFiles('requirements-ci.txt') }}-${{ hashFiles('setup.py') }}
        # If miss on key takes any other cache with different hashes, will download correct ones on next step anyway
        restore-keys: |
         ${{ runner.os }}-py-3.9-
    - name: Install python dependencies
      run: |
        pip install --upgrade pip setuptools wheel
        pip install -r requirements-ci.txt
        pip install -vv -Ue .  # We set -vv to see compiler exceptions/warnings
    - name: Run Unit Tests
      run: |
        make ci-test-unit
    - name: Lint code
      run: |
        make flake
    - name: Check readme for package
      run: |
        make check-readme
    - name: Build doc
      run: |
        pip install -r requirements-docs.txt
        make -C docs html
 
  test-linux:
    needs: test-sanity
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:

          # Older python versions against latest broker
          - python: 3.6
            kafka: "2.8.1"
            scala: "2.13"
          - python: 3.7
            kafka: "2.8.1"
            scala: "2.13"
          - python: 3.8
            kafka: "2.8.1"
            scala: "2.13"

          
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libsnappy-dev libzstd-dev libkrb5-dev krb5-user
    - name: Get pip cache dir
      id: pip-cache
      run: |
        python -m pip install -U "pip>=20.1"
        echo "::set-output name=dir::$(pip cache dir)"
    - name: Cache packages
      uses: actions/cache@v1
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-py-${{ matrix.python }}-${{ hashFiles('requirements-ci.txt') }}-${{ hashFiles('setup.py') }}
        # If miss on key takes any other cache with different hashes, will download correct ones on next step anyway
        restore-keys: |
         ${{ runner.os }}-py-${{ matrix.python }}-
    - name: Install python dependencies
      run: |
        pip install --upgrade pip setuptools wheel
        pip install -r requirements-ci.txt
        pip install -vv -Ue .  # We set -vv to see compiler exceptions/warnings
    - name: Run All Tests
      run: |
        make ci-test-all
        mv coverage.xml coverage-ext.xml
      env:
        SCALA_VERSION: ${{ matrix.scala }}
        KAFKA_VERSION: ${{ matrix.kafka }}

    - name: Run All Tests without extensions
      run: |
        make ci-test-all
        mv coverage.xml coverage-py.xml
      env:
        AIOKAFKA_NO_EXTENSIONS: "1"
        SCALA_VERSION: ${{ matrix.scala }}
        KAFKA_VERSION: ${{ matrix.kafka }}

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage-ext.xml
        flags: integration,cext
        name: test-linux-${{ matrix.python }}-${{ matrix.kafka }}-${{ matrix.scala }}-ext
      if: ${{ always() }}

    - name: Upload coverage without cext to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage-py.xml
        flags: integration,purepy
        name: test-linux-${{ matrix.python }}-${{ matrix.kafka }}-${{ matrix.scala }}-py
      if: ${{ always() }}
